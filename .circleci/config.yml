version: 2
jobs:
  build:
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.9

    working_directory: /go/src/github.com/marpio/img-store

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - setup_remote_docker
          docker_layer_caching: true
      - run: 
          name: Build cli and web
          command: |
            go build ./cmd/...
      - run: mkdir -p $TEST_RESULTS
      - run:
          name: Run unit tests and code cov
          command: |
            set -e
            echo "" > ${TEST_RESULTS}/coverage.txt
            for d in $(go list ./... | grep -v vendor); do
                go test -race -coverprofile=profile.out -covermode=atomic $d | tee test.out
                if [ -f test.out ]; then
                    cat test.out >> ${TEST_RESULTS}/tests.out
                    rm test.out
                fi
                if [ -f profile.out ]; then
                    cat profile.out >> ${TEST_RESULTS}/coverage.txt
                    rm profile.out
                fi
            done
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results
      - run:
          name: Upload coverage report to codecov.io
          command: |
            bash <(curl -s https://codecov.io/bash) -f ${TEST_RESULTS}/coverage.txt
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t   marpiot/pics:$TAG .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push marpio/pics:$TAG